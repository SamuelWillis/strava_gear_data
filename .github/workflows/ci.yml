name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CI: true

jobs:
  elixirSetup:
    name: Set up Elixir
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [23.1.1]
        elixir: [1.11.4]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: |
            _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup elixir
        uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Install test dependencies
        env:
          MIX_ENV: test
        run: mix do deps.get, deps.compile

      - name: Install dev dependencies and build PLTs
        run: mix do deps.get, deps.compile, dialyzer --plt

  jsSetup:
    name: Node.js/JavaScript
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [14.15.1]

    steps:
      - uses: actions/checkout@v2

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install frontend deps
        run: cd assets && yarn install

  exCheck:
    name: ExCheck
    runs-on: ubuntu-latest
    needs: [elixirSetup, jsSetup]
    strategy:
      matrix:
        otp: [23.1.1]
        elixir: [1.11.4]
        node: [14.15.1]

    services:
      db:
        image: postgres:12
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: |
            deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: |
            _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install frontend deps
        run: cd assets && yarn install

      - name: Deploy the JS assets for feature tests
        run: cd assets && yarn deploy

      - name: Setup test database
        env:
          MIX_ENV: test
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: test_db
        run: mix do ecto.create, ecto.migrate

      - name: Run Check
        run: mix check
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: test_db

  dispatchRelease:
    name: Invoke CD
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: CD
          token: ${{ secrets.PERSONAL_TOKEN }}
    needs:
      [
        elixirSetup,
        jsSetup,
        exCheck
      ]
